{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalCount: 0,\n  totalPrice: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.items = action.payload.items;\n      state.totalCount = action.payload.totalCount;\n      state.totalPrice = action.payload.totalPrice;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(value => value.id === newItem.id);\n      state.totalCount++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          count: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.count++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const removeItemId = action.payload;\n      const existingItem = state.items.find(value => value.id === removeItemId);\n      state.totalCount--;\n      state.changed = true;\n      if (existingItem.count === 1) {\n        state.items = state.items.filter(value => value.id !== removeItemId);\n      } else {\n        existingItem.count--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\nexport const {\n  replaceCart,\n  addItemToCart,\n  removeItemFromCart\n} = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","items","totalCount","totalPrice","changed","cartSlice","name","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","value","id","push","title","price","count","removeItemFromCart","removeItemId","filter","actions"],"sources":["/Users/kimdonggu/코딩 연습/React_practice/shopping-cart/src/redux/slice/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  totalCount: 0,\n  totalPrice: 0,\n  changed: false\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.items = action.payload.items;\n      state.totalCount = action.payload.totalCount;\n      state.totalPrice = action.payload.totalPrice;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((value) => value.id === newItem.id);\n      state.totalCount++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          count: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.count++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const removeItemId = action.payload;\n      const existingItem = state.items.find((value) => value.id === removeItemId);\n      state.totalCount--;\n      state.changed = true;\n      if (existingItem.count === 1) {\n        state.items = state.items.filter((value) => value.id !== removeItemId);\n      } else {\n        existingItem.count--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n})\n\nexport const { replaceCart, addItemToCart, removeItemFromCart } = cartSlice.actions;\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MAClCQ,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO,CAACT,UAAU;MAC5CO,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO,CAACR,UAAU;IAC9C,CAAC;IACDS,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACzER,KAAK,CAACP,UAAU,EAAE;MAClBO,KAAK,CAACL,OAAO,GAAG,IAAI;MACpB,IAAI,CAACU,YAAY,EAAE;QACjBL,KAAK,CAACR,KAAK,CAACiB,IAAI,CAAC;UACfD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAE,CAAC;UACRlB,UAAU,EAAEU,OAAO,CAACO;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,YAAY,CAACO,KAAK,EAAE;QACpBP,YAAY,CAACX,UAAU,IAAIU,OAAO,CAACO,KAAK;MAC1C;IACF,CAAC;IACDE,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMa,YAAY,GAAGb,MAAM,CAACC,OAAO;MACnC,MAAMG,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKM,YAAY,CAAC;MAC3Ed,KAAK,CAACP,UAAU,EAAE;MAClBO,KAAK,CAACL,OAAO,GAAG,IAAI;MACpB,IAAIU,YAAY,CAACO,KAAK,KAAK,CAAC,EAAE;QAC5BZ,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACuB,MAAM,CAAER,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKM,YAAY,CAAC;MACxE,CAAC,MAAM;QACLT,YAAY,CAACO,KAAK,EAAE;QACpBP,YAAY,CAACX,UAAU,IAAIW,YAAY,CAACM,KAAK;MAC/C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,WAAW;EAAEI,aAAa;EAAEU;AAAmB,CAAC,GAAGjB,SAAS,CAACoB,OAAO;AACnF,eAAepB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}